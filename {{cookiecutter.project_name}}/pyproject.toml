[tool.poetry]
name = "{{cookiecutter.project_name}}"
version = "{{cookiecutter.package_version}}"
description = "{{cookiecutter.friendly_name}}"
authors = ["{{cookiecutter.author}} <{{cookiecutter.email}}>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/{{cookiecutter.github_user}}/{{cookiecutter.project_name}}"
repository = "https://github.com/{{cookiecutter.github_user}}/{{cookiecutter.project_name}}"
{% if cookiecutter.package_name != cookiecutter.project_name.replace('-', '_') -%}
packages = [
    { include = "{{cookiecutter.package_name}}", from = "src" },
]
{% endif -%}
classifiers = [
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
]

[tool.poetry.dependencies]
python = "^3.7.1"
typer = "^0.4.0"

[tool.poetry.dev-dependencies]
black = "^22.0.0"
flake8 = "^4.0.0"
isort = "^5.10.0"
mypy = "^0.930"
pre-commit = "^2.17.0"
pydocstyle = "^6.0.0"
pytest = "^7.0.0"
pytest-cov = "^3.0.0"

[tool.poetry.scripts]
{{cookiecutter.project_name}} = "{{cookiecutter.package_name}}.__main__:main"

[tool.coverage.paths]
source = ["src"]

[tool.coverage.run]
branch = true
source = ["{{cookiecutter.package_name}}"]

[tool.coverage.report]
show_missing = true
fail_under = 100

[tool.mypy]
strict = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

[tool.black]
line-length = 79

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 79

[tool.pydocstyle]
convention = "google"
add_ignore = ["D100","D104","D212"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
